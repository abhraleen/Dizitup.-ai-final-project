import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { useToast } from "@/hooks/use-toast";
import { supabase } from "@/integrations/supabase/client";
import { Mail, Phone, MessageSquare } from "lucide-react";
const services = ["Social Media Automation", "Content Creation & Scheduling", "Website Development", "App Development", "Complete Package", "Custom Solution"];
const BookingForm = () => {
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    whatsapp: "",
    service: "",
    message: ""
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const {
    toast
  } = useToast();
  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);
    try {
      // Save to Supabase
      const {
        error
      } = await supabase.from('service_requests').insert({
        name: formData.name,
        email: formData.email,
        whatsapp: formData.whatsapp,
        service: formData.service,
        message: formData.message || null,
        enquiry_number: '' // Will be auto-generated by trigger
      });
      if (error) throw error;
      toast({
        title: "Message Sent Successfully! ðŸš€",
        description: "We'll get back to you within 24 hours with a custom proposal."
      });

      // Reset form
      setFormData({
        name: "",
        email: "",
        whatsapp: "",
        service: "",
        message: ""
      });
    } catch (error) {
      console.error('Error submitting form:', error);
      toast({
        title: "Error",
        description: "Something went wrong. Please try again.",
        variant: "destructive"
      });
    } finally {
      setIsSubmitting(false);
    }
  };
  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    setFormData(prev => ({
      ...prev,
      [e.target.name]: e.target.value
    }));
  };
  return <section id="booking" className="py-12 sm:py-16 md:py-20 bg-secondary">
      <div className="container max-w-4xl mx-auto px-4 sm:px-6">
        <div className="text-center mb-8 sm:mb-12">
          <h2 className="font-display text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold mb-4 sm:mb-6 text-foreground">
            Start Your <span className="text-primary">Digital Transformation</span>
          </h2>
          <p className="text-base sm:text-lg text-muted-foreground max-w-2xl mx-auto px-4">
            Tell us about your project and we'll create a custom AI-powered automation solution for your business growth.
          </p>
        </div>

        <Card className="bg-card border-border shadow-card hover-glow">
          <CardHeader className="text-center p-4 sm:p-6">
            <CardTitle className="font-display text-xl sm:text-2xl text-card-foreground">Book Your Free Consultation - Get Started Today!</CardTitle>
          </CardHeader>
          <CardContent className="p-4 sm:p-6">
            <form onSubmit={handleSubmit} className="space-y-4 sm:space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6">
                <div className="space-y-2">
                  <Label htmlFor="name" className="text-card-foreground font-medium">
                    Full Name *
                  </Label>
                  <Input id="name" name="name" value={formData.name} onChange={handleChange} required className="bg-input border-border focus:border-primary focus:ring-primary" placeholder="Your full name" />
                </div>
                
                <div className="space-y-2">
                  <Label htmlFor="email" className="text-card-foreground font-medium">
                    Email Address *
                  </Label>
                  <Input id="email" name="email" type="email" value={formData.email} onChange={handleChange} required className="bg-input border-border focus:border-primary focus:ring-primary" placeholder="your@email.com" />
                </div>
              </div>

              <div className="space-y-2">
                <Label htmlFor="whatsapp" className="text-card-foreground font-medium">
                  WhatsApp Number *
                </Label>
                <Input id="whatsapp" name="whatsapp" type="tel" value={formData.whatsapp} onChange={handleChange} required className="bg-input border-border focus:border-primary focus:ring-primary" placeholder="+1 (555) 123-4567" />
              </div>

              <div className="space-y-2">
                <Label htmlFor="service" className="text-card-foreground font-medium">
                  Service Interested In *
                </Label>
                <select id="service" name="service" value={formData.service} onChange={handleChange} required className="w-full px-3 py-2 bg-input border border-border rounded-md focus:border-primary focus:ring-1 focus:ring-primary text-foreground">
                  <option value="">Select a service</option>
                  {services.map((service, index) => <option key={index} value={service}>{service}</option>)}
                </select>
              </div>

              <div className="space-y-2">
                <Label htmlFor="message" className="text-card-foreground font-medium">
                  Project Details
                </Label>
                <Textarea id="message" name="message" value={formData.message} onChange={handleChange} rows={4} className="bg-input border-border focus:border-primary focus:ring-primary resize-none" placeholder="Tell us more about your project, goals, and timeline..." />
              </div>

              <Button type="submit" variant="hero" size="lg" className="w-full" disabled={isSubmitting}>
                {isSubmitting ? "Sending..." : "Send Message & Get Quote"}
              </Button>
            </form>
          </CardContent>
        </Card>

        {/* Contact info */}
        <div className="mt-8 sm:mt-12 grid grid-cols-1 md:grid-cols-3 gap-6 text-center px-4">
          <div className="flex flex-col items-center space-y-2">
            <Mail className="h-6 w-6 sm:h-8 sm:w-8 text-primary" />
            <p className="text-sm sm:text-base text-muted-foreground">Email us</p>
            <a href="mailto:dizitup@outlook.com" className="text-sm sm:text-base text-foreground font-medium hover:text-primary transition-colors break-all">dizitup@outlook.com</a>
          </div>
          
          <div className="flex flex-col items-center space-y-2">
            <MessageSquare className="h-6 w-6 sm:h-8 sm:w-8 text-primary" />
            <p className="text-sm sm:text-base text-muted-foreground">Response time</p>
            <p className="text-sm sm:text-base text-foreground font-medium">Within 24 hours</p>
          </div>
        </div>
      </div>
    </section>;
};
export default BookingForm;